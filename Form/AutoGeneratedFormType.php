<?php
/*
 * This file was delivered to you as part of the YuccaInSituUpdaterBundle package.
 *
 * (c) RÃ©mi JANOT <r.janot@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace Yucca\InSituUpdaterBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

/**
 * Class ArchitectSubscribeType
 * @package Fdf\Bundle\FdfBundle\Form\Type
 */
class AutoGeneratedFormType extends AbstractType
{
    protected $configuration;

    /**
     * @param array $configuration
     * @param $dataClass
     */
    public function __construct(array $configuration, $dataClass=null) {
        $this->configuration = $configuration;
        $this->dataClass = $dataClass;
    }

    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        if(isset($this->configuration['entities'])) {
            foreach($this->configuration['entities'] as $entityConfiguration) {
                $name = 'entity:'.$entityConfiguration['name'];
                $builder
                    ->add(
                        $name,
                        new self(
                            $entityConfiguration,
                            $entityConfiguration['entity_class_name']
                        ),
                        array_merge(
                            array('attr'=> array('class'=>'entity'))
                        )
                    );
            }
            $builder->add('Submit','submit');
        }
        if(isset($this->configuration['properties'])) {
            foreach($this->configuration['properties'] as $property) {
                $builder
                    ->add(
                        $property['name'],
                        $property['type'],
                        array_merge(
                            array('attr'=> array('class'=>'property')),
                            $property['options']
                        )
                    );
            }
        }
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => $this->dataClass,
            'translation_domain'=> 'in_situ'
        ));
    }

    /**
     * @return string
     */
    public function getName()
    {
        return 'yucca_in_situ_updater';
    }
}
